#!/bin/bash
image_list="images.txt"
images="vcluster-images.tar.gz"
chart_list=""
chart_dir="vcluster-charts"
usage () {
    echo "USAGE: $0 [--images vcluster-images.tar.gz] --registry my.registry.com:5000 [--chart-list charts.txt]"
    echo "  [-l|--image-list path] text file with list of images; one image per line."
    echo "  [-i|--images path] tar.gz generated by docker save."
    echo "  [-r|--registry registry:port] target private registry:port."
    echo "  [-c|--chart-list path] text file with list of charts; one chart per line."
    echo "  [-cd|--chart-dir path] directory where chart tar.gz files are saved."
    echo "  [-h|--help] Usage message"
}

push_manifest () {
    export DOCKER_CLI_EXPERIMENTAL=enabled
    manifest_list=()
    for i in "${arch_list[@]}"
    do
        manifest_list+=("$1-${i}")
    done

    echo "Preparing manifest $1, list[${arch_list[@]}]"
    docker manifest create "$1" "${manifest_list[@]}" --amend
    docker manifest push "$1" --purge
}

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -r|--registry)
        reg="$2"
        shift # past argument
        shift # past value
        ;;
        -l|--image-list)
        image_list="$2"
        shift # past argument
        shift # past value
        ;;
        -i|--images)
        images="$2"
        shift # past argument
        shift # past value
        ;;
        -c|--chart-list)
        chart_list="$2"
        shift # past argument
        shift # past value
        ;;
        -cd|--chart-dir)
        chart_dir="$2"
        shift # past argument
        shift # past value
        ;;
        -h|--help)
        help="true"
        shift
        ;;
        *)
        usage
        exit 1
        ;;
    esac
done
if [ -z "$reg" ]; then
    usage
    exit 1
fi
if [[ $help ]]; then
    usage
    exit 0
fi

if [ -f "${image_list}" ]; then
    docker load --input "${images}"

    linux_images=()
    while IFS= read -r i; do
        [ -z "${i}" ] && continue
        linux_images+=("${i}");
    done < "${image_list}"

    arch_list+=("linux-amd64")
    for i in "${linux_images[@]}"; do
        [ -z "${i}" ] && continue

        # trim ghcr.io & registry.k8s.io
        image_name=$(echo $i | sed 's/ghcr\.io\///')
        image_name=$(echo $image_name | sed 's/registry\.k8s\.io\///')

        echo "Push ${i} as ${reg}/${image_name}"
        docker tag "${i}" "${reg}/${image_name}"
        docker push "${reg}/${image_name}"
    done
fi

if [ -n "${chart_list}" ] && [ -f "${chart_list}" ]; then
    while IFS= read -r i; do
        [ -z "${i}" ] && continue
        chart_info=($i)
        chart_url="${chart_info[0]}"
        chart_version="${chart_info[1]}"
        chart_name=$(echo "${chart_url}" | sed 's/oci\:\/\/ghcr.io\/loft\-sh\/charts\///')
        chart_package="${chart_dir}/${chart_name}-${chart_version}.tgz"
        chart_dest=$(echo "${chart_url}" | sed 's/oci\:\/\/ghcr.io\///' | sed "s/${chart_name}$//")
        echo "Push Helm Chart ${chart_package} to oci://${reg}/${chart_dest}"
        helm push "${chart_package}" "oci://${reg}/${chart_dest}"
    done < "${chart_list}"
fi
